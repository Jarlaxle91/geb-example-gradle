plugins {
    id "idea"
    id "groovy"
    id "com.github.erdi.webdriver-binaries" version "2.2"
    id "com.github.erdi.idea-base" version "2.2"
}

ext {
    // The drivers we want to use
    drivers = ["chrome", "chromeHeadless"]

    ext {
        gebVersion = '5.1'
        seleniumVersion = '3.14.0'
        chromeDriverVersion = '99.0.4844.51'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'io.github.bonigarcia:selenium-jupiter:4.0.1'
    testCompile 'org.seleniumhq.selenium:selenium-java:4.1.2'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testCompile 'org.gebish:geb-junit5:5.1'
    testCompile 'org.assertj:assertj-core:3.22.0'
}

webdriverBinaries {
    chromedriver {
        version = '99.0.4844.51'
        fallbackTo32Bit = true
    }
}

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }  // Always run tests

        systemProperty "geb.build.reportsDir", reporting.file("geb/$name")
        systemProperty "geb.env", driver
    }
}

test {
    dependsOn drivers.collect { tasks["${it}Test"] }
    enabled = false

    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
//    systemProperty("junit.jupiter.execution.parallel.enabled", "true")
//    systemProperty("junit.jupiter.execution.parallel.config.strategy", "fixed")
//    systemProperty("junit.jupiter.execution.parallel.config.fixed.parallelism", 2)
}

tasks.withType(Test) {
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    testLogging {
        exceptionFormat = 'full'
    }
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.memoryMaximumSize = '256m'
}